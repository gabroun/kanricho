# import * from './schema_prep.graphql'
type SuccessMessage {
  message: String
}

type Mutation {
  createBoard(title: String!): Board!
  updateBoard(id: ID!, title: String): Board!
  deleteBoard(id: ID!): Board!
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
  createList(
    title: String!
    board: BoardCreateOneWithoutListsInput!
    color: String
  ): List!
  createCard(content: String!, list: ListCreateOneWithoutCardsInput!): Card!
  deleteList(id: ID!): List!
  deleteCard(id: ID!): Card!
  updateList(id: ID!, title: String): List!
  updateCard(id: ID!, content: String): Card!
}

type Query {
  # boards: [Board]!
  boards(where: BoardWhereInput!): [Board]!
  board(where: BoardWhereUniqueInput!): Board
  list(where: ListWhereUniqueInput!): List
  card(where: CardWhereUniqueInput!): Card
  me: User
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
}
